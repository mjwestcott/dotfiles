#!/usr/bin/env bash
#
# Install bash and zsh dotfiles environment on macOS.
#
# Manual steps:
#     $ chsh -s $(which zsh)
#     $ brew services start [...]
#     install vim plugins (including fzf)
#     install tmux plugins (prefix + I)
#     set up GitHub SSH key
#     set up git signing key

if [[ $(uname -s) != 'Darwin' ]]; then
    echo "Error: not on macOS"
    exit 1
elif [[ ! -e ~/dotfiles ]]; then
    echo "Error: ~/dotfiles does not exist"
    exit 1
elif [[ -s ~/dotfiles/backup ]]; then # Don't clobber an old backup
    echo "Error: ~/dotfiles/backup already exists"
    exit 1
fi

# Homebrew
[[ -z "$(command -v brew)" ]] && /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

# Install all packages from Brewfile
echo "Installing packages from Brewfile..."
brew bundle --file=~/dotfiles/Brewfile

# Rust config
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh \
    && source "$HOME/.cargo/env"

# Ruby config
rbenv install 3.1.2 && rbenv global 3.1.2

# Antidote (replaces Prezto)
if [[ ! -e ~/.antidote ]]; then
    git clone --depth=1 https://github.com/mattmc3/antidote.git ~/.antidote
fi

# Python Poetry
pipx install poetry

# Tmux Package Manager
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

# Dotfiles
cd ~/dotfiles && mkdir -pv backup
for path in shell/bash/* shell/zsh/* readline/* git/* vim/*rc tmux/tmux.conf rg/rgignore conda/*; do
    file=$(basename "$path")
    [[ -e "$HOME/.$file" ]] && mv -v "$HOME/.$file" "backup/$file"
    ln -sfv "$HOME/dotfiles/$path" "$HOME/.$file"
done

# Antidote plugins configuration
ln -sfv ~/dotfiles/antidote/zsh_plugins.txt ~/.zsh_plugins.txt

mkdir -pv ~/.config/nvim \
    && ln -sfv ~/dotfiles/vim/init.lua ~/.config/nvim/init.lua \
    && ln -sfv ~/dotfiles/vim/lua ~/.config/nvim/
mkdir -pv ~/.config/pgcli && ln -sfv ~/dotfiles/pgcli/config ~/.config/pgcli/config
mkdir -pv ~/.config/litecli && ln -sfv ~/dotfiles/litecli/config ~/.config/litecli/config
mkdir -pv ~/.config/alacritty && ln -sfv ~/dotfiles/alacritty/alacritty_macos.toml ~/.config/alacritty/alacritty.toml
mkdir -pv ~/.config && ln -sfv ~/dotfiles/starship/starship.toml ~/.config/starship.toml
mkdir -pv ~/.config/ranger/colorschemes \
    && ln -sfv ~/dotfiles/ranger/rc.conf ~/.config/ranger/rc.conf \
    && ln -sfv ~/dotfiles/ranger/scope.sh ~/.config/ranger/scope.sh \
    && ln -sfv ~/dotfiles/ranger/rifle.conf ~/.config/ranger/rifle.conf \
    && ln -sfv ~/dotfiles/ranger/zenburn.py ~/.config/ranger/colorschemes/zenburn.py
ln -sfv ~/dotfiles/karabiner/karabiner.edn ~/.config/karabiner.edn

# Claude config
mkdir -pv ~/.claude
ln -sfv ~/dotfiles/claude/settings.json ~/.claude/settings.json
ln -sfv ~/dotfiles/claude/statusline.sh ~/.claude/statusline.sh

cd ~/dotfiles/vim/colors && mkdir -pv ~/.vim/colors
for file in *; do
    [[ ! -e ~/.vim/colors/$file ]] \
        && ln -sfv "$HOME/dotfiles/vim/colors/$file" "$HOME/.vim/colors/$file" \
        && ln -sfv "$HOME/dotfiles/vim/colors/$file" "$HOME/.config/nvim/colors/$file"
done

cd ~/dotfiles/bin && mkdir -pv ~/bin
for file in *; do
    [[ ! -e ~/bin/$file ]] && ln -sfv "$HOME/dotfiles/bin/$file" "$HOME/bin/$file"
done
