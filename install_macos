#!/usr/bin/env bash
#
# Install bash and zsh dotfiles environment on macOS.
#
# Manual steps:
#     $ chsh -s $(which zsh)
#     $ brew services start [...]
#     install vim plugins (including fzf)
#     set up GitHub SSH key
#     set up git signing key

if [[ $(uname -s) != 'Darwin' ]]; then
    echo "Error: not on macOS"
    exit 1
elif [[ ! -e ~/dotfiles ]]; then
    echo "Error: ~/dotfiles does not exist"
    exit 1
elif [[ -s ~/dotfiles/backup ]]; then # Don't clobber an old backup
    echo "Error: ~/dotfiles/backup already exists"
    exit 1
elif [[ $(xcode-select -p) != '/Applications/Xcode.app/Contents/Developer' ]]; then
    echo "Error: Xcode must be installed first"
    exit 1
fi

# Homebrew
[[ -z "$(command -v brew)" ]] && ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
brew update
brew upgrade
brew tap caskroom/cask
brew install ag
brew install awscli
brew install bash
brew install bash-completion@2
brew install cmake
brew install coreutils
brew install ctags
brew install devd
brew install diff-so-fancy
brew install fasd
brew install git
brew install gnupg
brew install gnuplot
brew install go
brew install graphviz
brew install heroku/brew/heroku
brew install hexyl
brew install httpie
brew install hub
brew install jq
brew install macvim --HEAD
brew install memcached
brew install modd
brew install mysql
brew install node
brew install opam
brew install pgcli
brew install pipenv
brew install postgresql
brew install python
brew install python@2
brew install pyenv
brew install r
brew install rabbitmq
brew install ranger
brew install rbenv
brew install reattach-to-user-namespace
brew install redis
brew install rocksdb
brew install shellcheck
brew install sqlite
brew install tmux
brew install tree
brew install wget
brew install yarn
brew install youtube-dl
brew install zsh

brew cask install ngrok

# Java
brew cask install homebrew/cask-versions/java8
brew install apache-spark
brew install kafka
brew install kafkacat
brew install scala

# Elasticsearch (needs Java)
brew install elasticsearch

# k8s
brew cask install virtualbox
brew cask install minikube
brew install kubectl
brew install kubectx

# Docker
brew cask install docker
brew install docker-completion
brew install docker-compose-completion
brew install docker-machine-completion

# SF Mono
cp /Applications/Utilities/Terminal.app/Contents/Resources/Fonts/* ~/Library/Fonts

# Rust config
curl https://sh.rustup.rs -sSf | sh \
    && source "$HOME/.cargo/env" \
    && rustup override set stable \
    && rustup update stable

# Alacritty
git clone https://github.com/jwilm/alacritty.git ~/alacritty \
    && pushd ~/alacritty \
    && make app \
    && cp -rv target/release/osx/Alacritty.app /Applications/ \
    && popd || exit 1

# Python config
sudo pip3 install virtualenvwrapper
sudo pip3 install jupyterlab

# Jupyter
mkdir -pv ~/repos/python/notebooks \
    && cp ~/dotfiles/jupyter/Pipfile ~/repos/python/notebooks \
    && cp ~/dotfiles/jupyter/imports.ipynb ~/repos/python/notebooks \
    && CFLAGS="-I$(xcrun --show-sdk-path)/usr/include" pyenv install 3.7.2 \
    && pushd ~/repos/python/notebooks \
    && pipenv install --python ~/.pyenv/versions/3.7.2/bin/python \
    && popd || exit 1

# Ruby config
rbenv install 2.6.1 && rbenv global 2.6.1

# Prezto
if [[ ! -e ~/.zprezto ]]; then
    git clone --recursive https://github.com/mjwestcott/prezto.git ~/.zprezto
    git clone https://github.com/belak/prezto-contrib ~/.zprezto/contrib \
	&& pushd ~/.zprezto/contrib \
        && git submodule init \
        && git submodule update \
	&& popd || exit 1
fi

# git-prompt
if [[ ! -e ~/.git-prompt.sh ]]; then
    curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh -o ~/.git-prompt.sh
fi

# Tmux Package Manager
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm \
    && sudo ~/.tmux/plugins/tpm/bin/install_plugins

# Dotfiles
cd ~/dotfiles && mkdir -pv backup
for path in shell/bash/* shell/zsh/* readline/* git/* vim/*rc tmux/tmux.conf ag/agignore; do
    file=$(basename "$path")
    [[ -e "$HOME/.$file" ]] && mv -v "$HOME/.$file" "backup/$file"
    ln -sfv "$HOME/dotfiles/$path" "$HOME/.$file"
done

mkdir -pv ~/.config/pgcli && ln -sfv ~/dotfiles/pgcli/config ~/.config/pgcli/config
mkdir -pv ~/.config/ranger && ln -sfv ~/dotfiles/ranger/rc.conf ~/.config/ranger/rc.conf
mkdir -pv ~/.config/alacritty && ln -sfv ~/dotfiles/alacritty/alacritty_macos.yml ~/.config/alacritty/alacritty.yml

cd ~/dotfiles/vim/colors && mkdir -pv ~/.vim/colors
for file in *; do
    [[ ! -e ~/.vim/colors/$file ]] && ln -sfv "$HOME/dotfiles/vim/colors/$file" "$HOME/.vim/colors/$file"
done

cd ~/dotfiles/bin && mkdir -pv ~/bin
for file in *; do
    [[ ! -e ~/bin/$file ]] && ln -sfv "$HOME/dotfiles/bin/$file" "$HOME/bin/$file"
done
