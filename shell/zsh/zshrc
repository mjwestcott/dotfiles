#
# Executes commands at the start of an interactive session.
#

# Source profile.
[[ -e ~/dotfiles/shell/profile ]] && emulate sh -c 'source ~/dotfiles/shell/profile'

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

setopt HIST_IGNORE_SPACE
export HISTSIZE=100000
export SAVEHIST=100000
export HISTFILE=~/.zhistory
[[ -z "$TMPDIR" ]] && TMPDIR=/tmp

# Setup homebrew
eval $(/opt/homebrew/bin/brew shellenv)

# Source 'fzf'.
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

# Initialize fasd.
eval "$(fasd --init auto)"

# AWS CLI completion (assumes awscli installed by Homebrew).
source /opt/homebrew/share/zsh/site-functions

# GCP completion and path.
source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"
source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"

# Since it's provided by our prompt.
export VIRTUAL_ENV_DISABLE_PROMPT=1

# Configure opam
test -r /Users/mattwestcott/.opam/opam-init/init.zsh && . /Users/mattwestcott/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# Init pyenv
eval "$(pyenv init -)"

# Initalize rbenv.
command -v rbenv > /dev/null 2>&1 && eval "$(rbenv init -)"

# Spaceship prompt
SPACESHIP_PROMPT_ADD_NEWLINE="true"
SPACESHIP_PROMPT_SEPARATE_LINE="true"

SPACESHIP_PROMPT_ORDER=(
    time          # Time stamps section
    user          # Username section
    host          # Hostname section
    dir           # Current directory section
    aws           # Amazon Web Services section
    git           # Git section (git_branch + git_status)
    venv          # virtualenv section
    conda         # Anaconda environment
    kubecontext   # Kubectl context section
    line_sep      # Line break
    exit_code     # Exit code section
    jobs          # Background jobs indicator
    char          # Prompt character
)

SPACESHIP_RPROMPT_ORDER=()

# CHAR
SPACESHIP_CHAR_SYMBOL="❯"
SPACESHIP_CHAR_SUFFIX=" "
SPACESHIP_CHAR_COLOR_SUCCESS="7"
SPACESHIP_CHAR_COLOR_FAILURE="9"

# TIME
SPACESHIP_TIME_SHOW="false"
SPACESHIP_TIME_PREFIX=""
SPACESHIP_TIME_COLOR="8"

# USER
SPACESHIP_USER_PREFIX=""
SPACESHIP_USER_SUFFIX=""

# HOST
SPACESHIP_HOST_PREFIX="@"
SPACESHIP_HOST_SUFFIX=" "

# DIR
SPACESHIP_DIR_PREFIX=""
SPACESHIP_DIR_TRUNC="0"
SPACESHIP_DIR_TRUNC_REPO="false"
SPACESHIP_DIR_COLOR="4"

# GIT
SPACESHIP_GIT_SYMBOL=""
SPACESHIP_GIT_BRANCH_PREFIX=""
SPACESHIP_GIT_BRANCH_COLOR="7"
SPACESHIP_GIT_PREFIX=""
SPACESHIP_GIT_SUFFIX=" "
SPACESHIP_GIT_BRANCH_SUFFIX=""
SPACESHIP_GIT_STATUS_PREFIX=""
SPACESHIP_GIT_STATUS_SUFFIX=""
SPACESHIP_GIT_STATUS_COLOR="3"

# VENV
SPACESHIP_VENV_PREFIX=""
SPACESHIP_VENV_SUFFIX=" "
SPACESHIP_VENV_COLOR="2"

# AWS
SPACESHIP_AWS_PREFIX=""
SPACESHIP_AWS_SUFFIX=" "
SPACESHIP_AWS_SYMBOL=""
SPACESHIP_AWS_COLOR="1"

# KUBECTL
SPACESHIP_KUBECONTEXT_PREFIX=""
SPACESHIP_KUBECONTEXT_SUFFIX=""
SPACESHIP_KUBECONTEXT_SYMBOL="☸️ "

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/local/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/usr/local/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/usr/local/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/usr/local/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
