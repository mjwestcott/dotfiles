#
# Executes commands at the start of an interactive session.
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

setopt HIST_IGNORE_SPACE
export HISTSIZE=100000
export SAVEHIST=100000
export HISTFILE=~/.zhistory
[[ -z "$TMPDIR" ]] && TMPDIR=/tmp

# PATH
export PATH=$HOME/bin:$PATH
export PATH=$PATH:/usr/local/bin
export PATH=$PATH:/usr/local/opt/bin
export PATH=/usr/local/opt/python/libexec/bin:$PATH

# go setup
export GOPATH=$HOME/repos/go
export PATH=$PATH:$GOPATH/bin
if [[ $(uname) != *Darwin* ]]; then
    # because it's built from source
    export GOROOT=$HOME/go1.4
    export PATH=$PATH:$GOROOT/bin
fi

# virtualenv setup (note: sh script is sourced by the prezto python module)
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/repos/python
export VIRTUAL_ENV_DISABLE_PROMPT=1

# fzf options
export FZF_DEFAULT_COMMAND='ag -g ""'
export FZF_DEFAULT_OPTS='--color prompt:4,pointer:1,marker:5,info:2,spinner:5,hl:3,hl+:3'
export FZF_TMUX=0

# ag options
export AGIGNORE="$HOME/dotfiles/ag/agignore"

# pure options
export PURE_CMD_MAX_EXEC_TIME=0

# grep options
export GREP_COLOR='30;43'                             # BSD
export GREP_COLORS='mt=30;43:ln=1;33:fn=1;32:se=37'   # GNU

# Haskell/Stack setup
export PATH="$PATH:$HOME/.local/bin"

# Homebrew
export HOMEBREW_NO_ANALYTICS=1

# fuzzynotes
export NOTESDIR="$HOME/notes"

# Heroku postgres
export DATABASE_URL=postgres:///$(whoami)

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias r=ranger
alias t2='tree -L 2'
alias t3='tree -L 3'
alias grep='grep --color=auto'
alias ide='vim +NERDTreeToggle +TagbarToggle'

# Notes (relies on fuzzynotes script in $HOME/bin)
alias n='fuzzynotes run --loop'
alias notes='fuzzynotes run'
alias nsync='fuzzynotes rename && fuzzynotes sync'
alias autosync='fuzzynotes autosync &'

# Python
alias py='python'
alias ip='ipython'
alias nb='jupyter notebook'
alias de='deactivate'
alias wk='workon'

# https://github.com/junegunn/gv.vim
alias gv='vim -c ":GV"'

# fasd
alias j='fasd_jump'
alias v='fasd_vim'

function fasd_jump {
    if [[ -n "${*}" ]]; then
        fasd_cd -d "${*}"
    else
        cd $OLDPWD
    fi
}

function fasd_vim {
    if [[ -n "${*}" ]]; then
        LANG=C fasd -f -t -e vim -b viminfo "${*}"
    else
        vim -c ":History"
    fi
}

# Mirroring vim mappings.
alias ,v='fasd_vim'
alias ,m='fasd_vim'

# Fuzzy finding aliases using 'fzf'.
alias ,j='fzf_jump'
alias ,t='fzf_vim'
alias ,a='fzf_ag'
alias ,h='fzf_hidden'
alias ,g='fzf_regex'
alias ,l='fzf_locate'
alias ,c='fzf_commit'
alias ,b='fzf_branches'

function fzf_jump {
    local file="$(ag -p $AGIGNORE -g "" | fzf -q "${*}")"
    [[ -n "$file" ]] && cd "$(dirname "$file")"
}

function fzf_vim {
    local file="$(ag -p $AGIGNORE -g "" | fzf -q "${*}")"
    [[ -n "$file" ]] && vim "$file"
}

# Similar to fzf_vim, but show only hidden files (respecting agignore).
function fzf_hidden {
    local file="$(ag --hidden -f -p $AGIGNORE -g "/\..+" --ignore "/.git" | fzf -q "${*}")"
    [[ -n "$file" ]] && vim "$file"
}

function fzf_ag {
    local tmp="$TMPDIR/fzf_ag"
    ag "." | fzf -e -m -q "${*}" >! "$tmp"
    [[ -s "$tmp" ]] && vim -q "$tmp"
}

# Similar to fzf_ag, but pass the args through to ag as a regex and filter only the source text.
function fzf_regex {
    local tmp="$TMPDIR/fzf_ag"
    ag "${*}" --color | fzf -e -m --ansi --color=hl:4,hl+:4 --delimiter=':' --nth=3.. >! "$tmp"
    [[ -s "$tmp" ]] && vim -q "$tmp"
}

# Search the whole file system using locate.
function fzf_locate {
    local result="$(locate / | fzf -q "${*}")"
    if [[ -d "$result" ]]; then
        cd "$result"
    elif [[ -f "$result" ]]; then
        vim "$result"
    fi
}

# Search git log in fzf.
function fzf_commit {
    local sha="$(git log --pretty=format:"%h %an %ad %s" --date=short \
                   | fzf -q "${*}" \
                   | awk -F' ' '{ print $1 }')"
    [[ -n "$sha" ]] && git show "$sha"
}

# Checkout git branch/tag, from
# https://github.com/junegunn/dotfiles/blob/master/bashrc
function fzf_branches {
    local tags branches target
    tags=$(git tag | awk '{print "\x1b[31;1mtag\x1b[m\t" $1}') || return
    branches=$(
        git branch --all | grep -v HEAD             |
        sed "s/.* //"    | sed "s#remotes/[^/]*/##" |
        sort -u          | awk '{print "\x1b[34;1mbranch\x1b[m\t" $1}') || return
    target=$(
        (echo "$tags"; echo "$branches") |
        fzf-tmux -l40 -- --no-hscroll --ansi +m -d "\t" -n 2 -1 -q "$*") || return
    git checkout $(echo "$target" | awk '{print $2}')
}

function fzf_tmux {
  local session
  session=$(tmux list-sessions -F "#{session_name}" | \
    fzf --query="$1" --select-1 --exit-0) && tmux switch-client -t "$session"
}

# Source 'fzf'.
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

# Initialize fasd
[[ -f ~/.fasd ]] && eval "$(fasd --init auto)"

# Initalize rbenv
eval "$(rbenv init -)"

# Source extra config
[[ -f ~/dotfiles/private ]] && source ~/dotfiles/private

# OPAM configuration
command -v opam > /dev/null 2>&1 && eval `opam config env`

# awscli completion (assumes awscli installed by homebrew)
source /usr/local/share/zsh/site-functions/_aws
