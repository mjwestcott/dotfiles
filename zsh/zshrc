#
# Executes commands at the start of an interactive session.
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias r=ranger
alias grep='grep --color=auto'

# Python
alias py='python'
alias ip='ipython'
alias nb='jupyter notebook'
alias de='deactivate'
alias wk='workon'

# fasd
alias j='fasd_jump'
alias v='fasd_vim'

function fasd_jump {
    if [[ -n "${*}" ]]; then
        fasd_cd -d "${*}"
    else
        cd $OLDPWD
    fi
}

function fasd_vim {
    if [[ -n "${*}" ]]; then
        LANG=C fasd -f -e vim -b viminfo "${*}"
    else
        vim
    fi
}

# Fuzzy finding aliases using 'fzf'.
alias J='fzf_jump'
alias V='fzf_vim'
alias A='fzf_ag'
alias H='fzf_hidden'
alias G='fzf_regex'
alias L='fzf_locate'
alias C='fzf_commit'

function fzf_jump {
    local file="$(ag -p $AGIGNORE $HOME -g "" | fzf -q "${*}")"
    [[ -n "$file" ]] && cd "$(dirname "$file")"
}

function fzf_vim {
    local file="$(ag -p $AGIGNORE $HOME -g "" | fzf -q "${*}")"
    [[ -n "$file" ]] && vim "$file"
}

# Similar to fzf_vim, but show only hidden files (respecting agignore).
function fzf_hidden {
    local file="$(ag --hidden -f -p $AGIGNORE $HOME -g "/\..+" --ignore "/.git" | fzf -q "${*}")"
    [[ -n "$file" ]] && vim "$file"
}

function fzf_ag {
    local tmp="$TMPDIR/fzf_ag"
    ag "." | fzf -m -q "${*}" --delimiter=':' --nth=3.. >! "$tmp"
    [[ -s "$tmp" ]] && vim -q "$tmp"
}

# Similar to fzf_ag, but pass the args through to ag as a regex.
function fzf_regex {
    local tmp="$TMPDIR/fzf_ag"
    ag "${*}" --color | fzf -m --ansi --color=hl:4,hl+:4 --delimiter=':' --nth=3.. >! "$tmp"
    [[ -s "$tmp" ]] && vim -q "$tmp"
}

# Search the whole file system using locate.
function fzf_locate {
    local result="$(locate / | fzf -q "${*}")"
    if [[ -d "$result" ]]; then
        cd "$result"
    elif [[ -f "$result" ]]; then
        vim "$result"
    fi
}

# Search git log in fzf.
function fzf_commit {
    local sha="$(git log --pretty=format:"%h %an %ad %s" --date=short \
                   | fzf -q "${*}" \
                   | awk -F' ' '{ print $1 }')"
    [[ -n "$sha" ]] && git show "$sha"
}

# Source 'fzf'.
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

# Initialize fasd
[[ -f ~/.fasd ]] && eval "$(fasd --init auto)"

# Initalize rbenv
eval "$(rbenv init -)"

# Source extra config
[[ -f ~/dotfiles/private ]] && source ~/dotfiles/private

# OPAM configuration
command -v opam > /dev/null 2>&1 && eval `opam config env`
